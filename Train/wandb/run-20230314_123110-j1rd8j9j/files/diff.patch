diff --git a/Train/.ipynb_checkpoints/Train-checkpoint.ipynb b/Train/.ipynb_checkpoints/Train-checkpoint.ipynb
index 5b94065..26c2e16 100644
--- a/Train/.ipynb_checkpoints/Train-checkpoint.ipynb
+++ b/Train/.ipynb_checkpoints/Train-checkpoint.ipynb
@@ -2,9 +2,17 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 1,
    "id": "0c403f8d-3cfd-48f5-8a4a-500a03fff3d8",
-   "metadata": {},
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:30:09.602028Z",
+     "iopub.status.busy": "2023-03-14T16:30:09.601529Z",
+     "iopub.status.idle": "2023-03-14T16:30:16.061024Z",
+     "shell.execute_reply": "2023-03-14T16:30:16.060024Z",
+     "shell.execute_reply.started": "2023-03-14T16:30:09.602028Z"
+    }
+   },
    "outputs": [],
    "source": [
     "import timm\n",
@@ -17,42 +25,111 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 2,
    "id": "9bf1891d-2288-4580-a1d8-2a5197ec122c",
-   "metadata": {},
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:30:16.063525Z",
+     "iopub.status.busy": "2023-03-14T16:30:16.062524Z",
+     "iopub.status.idle": "2023-03-14T16:30:16.076525Z",
+     "shell.execute_reply": "2023-03-14T16:30:16.075524Z",
+     "shell.execute_reply.started": "2023-03-14T16:30:16.063525Z"
+    }
+   },
+   "outputs": [],
+   "source": [
+    "# config = SimpleNamespace(\n",
+    "#     batch_size=2,\n",
+    "#     img_size=224,\n",
+    "#     seed=42,\n",
+    "#     pretrained=True,\n",
+    "#     model_name=\"maxvit_rmlp_small_rw_224.sw_in1k\", # try with maxvit_nano_rw_256.sw_in1k # regnetx_040 coatnet_bn_0_rw_224.sw_in1k\n",
+    "#     epochs=3)\n",
+    "\n",
+    "# def get_planets(batch_size=8, img_size=224, seed=42):\n",
+    "#     \"A sample of the planets dataset\"\n",
+    "#     # dataset_path=untar_data(URLs.PLANET_SAMPLE)\n",
+    "#     dls = ImageDataLoaders.from_csv(dataset_path, \n",
+    "#                                     folder=\"train\", \n",
+    "#                                     csv_fname=\"labels.csv\",\n",
+    "#                                     label_delim=\" \",\n",
+    "#                                     suff=\".jpg\",\n",
+    "#                                     bs=batch_size,\n",
+    "#                                     seed=seed,\n",
+    "#                                     item_tfms=Resize(img_size))\n",
+    "#     return dls\n",
+    "\n",
+    "# def train(config):\n",
+    "#     \"Train the model using the supplied config\"\n",
+    "#     dls = get_planets(config.batch_size, config.img_size, config.seed)\n",
+    "#     with wandb.init(project=\"PROJECT\", group='ambrosia_symbiosis', job_type='test_training', config=config):\n",
+    "#         cbs = [MixedPrecision(), WandbCallback(log='all')]\n",
+    "#         learn = vision_learner(dls, config.model_name, metrics=[accuracy_multi], #error_rate, \n",
+    "#                                cbs=cbs, pretrained=config.pretrained)\n",
+    "#         # learn.remove_cb(ProgressCallback)\n",
+    "#         learn.fine_tune(config.epochs)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "id": "c4e633d2-718e-4940-9e6e-94ea772337e1",
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:31:03.231024Z",
+     "iopub.status.busy": "2023-03-14T16:31:03.230525Z",
+     "iopub.status.idle": "2023-03-14T16:31:03.242527Z",
+     "shell.execute_reply": "2023-03-14T16:31:03.241524Z",
+     "shell.execute_reply.started": "2023-03-14T16:31:03.231024Z"
+    },
+    "tags": []
+   },
    "outputs": [],
    "source": [
     "config = SimpleNamespace(\n",
-    "    batch_size=2,\n",
+    "    batch_size=8,\n",
     "    img_size=224,\n",
     "    seed=42,\n",
     "    pretrained=True,\n",
     "    model_name=\"maxvit_rmlp_small_rw_224.sw_in1k\", # try with maxvit_nano_rw_256.sw_in1k # regnetx_040 coatnet_bn_0_rw_224.sw_in1k\n",
     "    epochs=3)\n",
     "\n",
-    "def get_planets(batch_size=8, img_size=224, seed=42):\n",
-    "    \"A sample of the planets dataset\"\n",
-    "    dataset_path=untar_data(URLs.PLANET_SAMPLE)\n",
-    "    dls = ImageDataLoaders.from_csv(dataset_path, \n",
-    "                                    folder=\"train\", \n",
-    "                                    csv_fname=\"labels.csv\",\n",
-    "                                    label_delim=\" \",\n",
-    "                                    suff=\".jpg\",\n",
-    "                                    bs=batch_size,\n",
-    "                                    seed=seed,\n",
-    "                                    item_tfms=Resize(img_size))\n",
+    "def get_images(dataset_path, batch_size, img_size, seed):\n",
+    "    \"The beetles dataset\"\n",
+    "    files = get_image_files(dataset_path)\n",
+    "    dls = ImageDataLoaders.from_name_re(dataset_path, files, \n",
+    "                                        pat=r'(^[a-zA-Z]+_*[a-zA-Z]+)', \n",
+    "                                        valid_pct=0.2, \n",
+    "                                        seed=seed, \n",
+    "                                        bs=batch_size,\n",
+    "                                        item_tfms=Resize(img_size)) \n",
     "    return dls\n",
     "\n",
-    "def train(config):\n",
+    "def train(config, dataset_path):\n",
     "    \"Train the model using the supplied config\"\n",
-    "    dls = get_planets(config.batch_size, config.img_size, config.seed)\n",
+    "    dls = get_images(dataset_path=dataset_path, batch_size=config.batch_size, img_size=config.img_size, seed=config.seed)\n",
     "    with wandb.init(project=\"PROJECT\", group='ambrosia_symbiosis', job_type='test_training', config=config):\n",
     "        cbs = [MixedPrecision(), WandbCallback(log='all')]\n",
-    "        learn = vision_learner(dls, config.model_name, metrics=[accuracy_multi], #error_rate, \n",
+    "        learn = vision_learner(dls, config.model_name, metrics=[error_rate, accuracy], \n",
     "                               cbs=cbs, pretrained=config.pretrained)\n",
-    "        # learn.remove_cb(ProgressCallback)\n",
     "        learn.fine_tune(config.epochs)"
    ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "2d677984-84cd-4344-8929-6deb33e8aac3",
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:31:03.342027Z",
+     "iopub.status.busy": "2023-03-14T16:31:03.341526Z"
+    },
+    "tags": []
+   },
+   "outputs": [],
+   "source": [
+    "train(config=config, dataset_path=r\"F:\\selected_images\\train\")"
+   ]
   }
  ],
  "metadata": {
diff --git a/Train/Train.ipynb b/Train/Train.ipynb
index 5b94065..26c2e16 100644
--- a/Train/Train.ipynb
+++ b/Train/Train.ipynb
@@ -2,9 +2,17 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 1,
    "id": "0c403f8d-3cfd-48f5-8a4a-500a03fff3d8",
-   "metadata": {},
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:30:09.602028Z",
+     "iopub.status.busy": "2023-03-14T16:30:09.601529Z",
+     "iopub.status.idle": "2023-03-14T16:30:16.061024Z",
+     "shell.execute_reply": "2023-03-14T16:30:16.060024Z",
+     "shell.execute_reply.started": "2023-03-14T16:30:09.602028Z"
+    }
+   },
    "outputs": [],
    "source": [
     "import timm\n",
@@ -17,42 +25,111 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 2,
    "id": "9bf1891d-2288-4580-a1d8-2a5197ec122c",
-   "metadata": {},
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:30:16.063525Z",
+     "iopub.status.busy": "2023-03-14T16:30:16.062524Z",
+     "iopub.status.idle": "2023-03-14T16:30:16.076525Z",
+     "shell.execute_reply": "2023-03-14T16:30:16.075524Z",
+     "shell.execute_reply.started": "2023-03-14T16:30:16.063525Z"
+    }
+   },
+   "outputs": [],
+   "source": [
+    "# config = SimpleNamespace(\n",
+    "#     batch_size=2,\n",
+    "#     img_size=224,\n",
+    "#     seed=42,\n",
+    "#     pretrained=True,\n",
+    "#     model_name=\"maxvit_rmlp_small_rw_224.sw_in1k\", # try with maxvit_nano_rw_256.sw_in1k # regnetx_040 coatnet_bn_0_rw_224.sw_in1k\n",
+    "#     epochs=3)\n",
+    "\n",
+    "# def get_planets(batch_size=8, img_size=224, seed=42):\n",
+    "#     \"A sample of the planets dataset\"\n",
+    "#     # dataset_path=untar_data(URLs.PLANET_SAMPLE)\n",
+    "#     dls = ImageDataLoaders.from_csv(dataset_path, \n",
+    "#                                     folder=\"train\", \n",
+    "#                                     csv_fname=\"labels.csv\",\n",
+    "#                                     label_delim=\" \",\n",
+    "#                                     suff=\".jpg\",\n",
+    "#                                     bs=batch_size,\n",
+    "#                                     seed=seed,\n",
+    "#                                     item_tfms=Resize(img_size))\n",
+    "#     return dls\n",
+    "\n",
+    "# def train(config):\n",
+    "#     \"Train the model using the supplied config\"\n",
+    "#     dls = get_planets(config.batch_size, config.img_size, config.seed)\n",
+    "#     with wandb.init(project=\"PROJECT\", group='ambrosia_symbiosis', job_type='test_training', config=config):\n",
+    "#         cbs = [MixedPrecision(), WandbCallback(log='all')]\n",
+    "#         learn = vision_learner(dls, config.model_name, metrics=[accuracy_multi], #error_rate, \n",
+    "#                                cbs=cbs, pretrained=config.pretrained)\n",
+    "#         # learn.remove_cb(ProgressCallback)\n",
+    "#         learn.fine_tune(config.epochs)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "id": "c4e633d2-718e-4940-9e6e-94ea772337e1",
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:31:03.231024Z",
+     "iopub.status.busy": "2023-03-14T16:31:03.230525Z",
+     "iopub.status.idle": "2023-03-14T16:31:03.242527Z",
+     "shell.execute_reply": "2023-03-14T16:31:03.241524Z",
+     "shell.execute_reply.started": "2023-03-14T16:31:03.231024Z"
+    },
+    "tags": []
+   },
    "outputs": [],
    "source": [
     "config = SimpleNamespace(\n",
-    "    batch_size=2,\n",
+    "    batch_size=8,\n",
     "    img_size=224,\n",
     "    seed=42,\n",
     "    pretrained=True,\n",
     "    model_name=\"maxvit_rmlp_small_rw_224.sw_in1k\", # try with maxvit_nano_rw_256.sw_in1k # regnetx_040 coatnet_bn_0_rw_224.sw_in1k\n",
     "    epochs=3)\n",
     "\n",
-    "def get_planets(batch_size=8, img_size=224, seed=42):\n",
-    "    \"A sample of the planets dataset\"\n",
-    "    dataset_path=untar_data(URLs.PLANET_SAMPLE)\n",
-    "    dls = ImageDataLoaders.from_csv(dataset_path, \n",
-    "                                    folder=\"train\", \n",
-    "                                    csv_fname=\"labels.csv\",\n",
-    "                                    label_delim=\" \",\n",
-    "                                    suff=\".jpg\",\n",
-    "                                    bs=batch_size,\n",
-    "                                    seed=seed,\n",
-    "                                    item_tfms=Resize(img_size))\n",
+    "def get_images(dataset_path, batch_size, img_size, seed):\n",
+    "    \"The beetles dataset\"\n",
+    "    files = get_image_files(dataset_path)\n",
+    "    dls = ImageDataLoaders.from_name_re(dataset_path, files, \n",
+    "                                        pat=r'(^[a-zA-Z]+_*[a-zA-Z]+)', \n",
+    "                                        valid_pct=0.2, \n",
+    "                                        seed=seed, \n",
+    "                                        bs=batch_size,\n",
+    "                                        item_tfms=Resize(img_size)) \n",
     "    return dls\n",
     "\n",
-    "def train(config):\n",
+    "def train(config, dataset_path):\n",
     "    \"Train the model using the supplied config\"\n",
-    "    dls = get_planets(config.batch_size, config.img_size, config.seed)\n",
+    "    dls = get_images(dataset_path=dataset_path, batch_size=config.batch_size, img_size=config.img_size, seed=config.seed)\n",
     "    with wandb.init(project=\"PROJECT\", group='ambrosia_symbiosis', job_type='test_training', config=config):\n",
     "        cbs = [MixedPrecision(), WandbCallback(log='all')]\n",
-    "        learn = vision_learner(dls, config.model_name, metrics=[accuracy_multi], #error_rate, \n",
+    "        learn = vision_learner(dls, config.model_name, metrics=[error_rate, accuracy], \n",
     "                               cbs=cbs, pretrained=config.pretrained)\n",
-    "        # learn.remove_cb(ProgressCallback)\n",
     "        learn.fine_tune(config.epochs)"
    ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "2d677984-84cd-4344-8929-6deb33e8aac3",
+   "metadata": {
+    "execution": {
+     "iopub.execute_input": "2023-03-14T16:31:03.342027Z",
+     "iopub.status.busy": "2023-03-14T16:31:03.341526Z"
+    },
+    "tags": []
+   },
+   "outputs": [],
+   "source": [
+    "train(config=config, dataset_path=r\"F:\\selected_images\\train\")"
+   ]
   }
  ],
  "metadata": {
